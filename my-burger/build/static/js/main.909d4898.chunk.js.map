{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIgredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/UI/Input/Input.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/Layout/Layout.module.css","components/UI/Backdrop/BackDrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Auxy.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","axios-orders.js","store/actions/auth.js","store/actions/actionTypes.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","containers/BurgerBulider/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","shared/validation.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/utility.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","alt","src","navigationItem","NavigationItem","activeClassName","active","exact","to","link","navigationItems","NavigationItems","isAuthorised","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","isAuth","backDrop","show","BackDrop","sideDrawer","attachClasses","SideDrawer","Close","open","Open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","isAutherized","Content","Component","connect","auth","token","instance","axios","create","baseURL","authSuccess","userId","type","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","dispatch","setTimeout","setAuthRedirectPath","path","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","modal","modalClosed","Modal","style","transform","opacity","button","Button","btnType","orderSummary","ingredientSummary","textTransform","purchaseCanceled","purchaseContinue","spinner","Loader","withErrorHandler","WrappedComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","BurgerBuilder","purchasing","purchaseHandler","isAuthenticated","onSetAuthRedirectPath","history","push","purchaseCancelHandler","purchaseContinueHandler","onPurchaseInit","onInitIngredients","sum","disabledInfo","ingr","Spinner","OrderSummary","totPrc","onIngredientAdded","onIngredientRemoved","updatePurchaseState","burgerBuilder","totalPrice","ingName","ingredientName","get","then","resp","data","catch","burgerBuilderActions","checkoutSummary","CheckoutSummary","width","margin","checkoutCanceled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","chechValidity","rules","isValid","required","trim","minlength","maxLength","isEmail","test","ContactData","orderForm","name","placeholder","validation","valid","street","zip","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","orderDataIdentifier","order","orderData","onOrderBurger","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formIdentifier","console","log","formElementsArray","id","config","form","onSubmit","formElement","loading","post","orderId","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCanceledHandler","goBack","checkoutContinuedHandler","replace","summary","purchaseDone","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrder","orders","queryParams","fetchedData","err","Auth","password","minLength","isSignUp","controlName","updatedControls","submitHandler","onAuth","switchAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","Logout","onLogout","App","onAutoSignIn","routes","getItem","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","updatedObject","object","authStart","authFail","authLogout","composeEnhancers","compose","rootReducer","combineReducers","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.909d4898.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIgredient_BreadBottom__1kAvZ\",\"BreadTop\":\"BurgerIgredient_BreadTop__W6HHX\",\"Seeds1\":\"BurgerIgredient_Seeds1__Q9frC\",\"Seeds2\":\"BurgerIgredient_Seeds2__3GJRr\",\"Meat\":\"BurgerIgredient_Meat__3qrhE\",\"Cheese\":\"BurgerIgredient_Cheese__1asSU\",\"Salad\":\"BurgerIgredient_Salad__1E7qi\",\"Bacon\":\"BurgerIgredient_Bacon__3H8vq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__weC-n\",\"Open\":\"SideDrawer_Open__35Nbd\",\"Close\":\"SideDrawer_Close__2K_hn\",\"Logo\":\"SideDrawer_Logo__1hIJ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__2TDLB\",\"Label\":\"BuildControl_Label__3jl7K\",\"Less\":\"BuildControl_Less__U4lgp\",\"More\":\"BuildControl_More__3Xtxn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar___zSJO\",\"Logo\":\"Toolbar_Logo__2KN11\",\"DesktopOnly\":\"Toolbar_DesktopOnly__YmTCc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__27GtE\",\"Label\":\"Input_Label__DYiJE\",\"InputElement\":\"Input_InputElement__32w5l\",\"Invalid\":\"Input_Invalid__mh__o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__jYmPI\",\"active\":\"NavigationItem_active__WmLfd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1BXum\",\"OrderButton\":\"BuildControls_OrderButton__1SdzZ\",\"enable\":\"BuildControls_enable__2gieB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2iA27\",\"Success\":\"Button_Success__cMBDb\",\"Danger\":\"Button_Danger__2I2Fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3zIKw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__3ncPH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__1Sc_x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__2MGp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__34twN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__FyKG7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2lGjg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2BE7f\",\"load2\":\"Spinner_load2__1S5T8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__s7K_f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__22Dji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__1K-VM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2ux7v\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;\r\n","import React from \"react\";\r\nimport classes from \"./Logo.module.css\";\r\n\r\nconst logo = (props) => (\r\n  <div className={classes.Logo}>\r\n    <img\r\n      alt=\"\"\r\n      src=\"https://www.kindpng.com/picc/m/38-387166_burger-clipart-logo-design-png-burger-logo-design.png\"\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default logo;\r\n","import React from \"react\";\r\nimport {NavLink} from 'react-router-dom'\r\nimport classes from \"./NavigationItem.module.css\";\r\n\r\nconst navigationItem = (props) => (\r\n  <li className={classes.NavigationItem}>\r\n    <NavLink activeClassName={classes.active} exact to={props.link} >\r\n      {props.children}\r\n    </NavLink>\r\n  </li>\r\n);\r\n\r\nexport default navigationItem;\r\n","import React from \"react\";\r\nimport classes from \"./NavigationItems.module.css\";\r\nimport NavigationItem from \"./NavigationItem/NavigationItem\";\r\n\r\nconst navigationItems = (props) => (\r\n  <ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/\" >\r\n      Burger Builder\r\n    </NavigationItem>\r\n    {props.isAuthorised\r\n    ?<NavigationItem link=\"/orders\">Orders</NavigationItem>:null}\r\n    {!props.isAuthorised\r\n    ?<NavigationItem link=\"/auth\">Auth</NavigationItem>\r\n    :<NavigationItem link=\"/logout\">Logout</NavigationItem>   }\r\n    \r\n  </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from \"react\";\r\nimport classes from \"./DrawerToggle.module.css\";\r\n\r\nconst drawerToggle = (props) => (\r\n  <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n    <div></div>\r\n    <div></div>\r\n    <div></div>\r\n  </div>\r\n);\r\n\r\nexport default drawerToggle;\r\n","import React from \"react\";\r\nimport classes from \"./Toolbar.module.css\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport DrawerToggle from \"../SideDrawer/DrawerToggle/DrawerToggle\";\r\n\r\nconst toolbar = (props) => (\r\n  <header className={classes.Toolbar}>\r\n    <DrawerToggle clicked={props.drawerToggleClicked} />\r\n    <div className={classes.Logo}>\r\n      <Logo />\r\n    </div>\r\n    <nav className={classes.DesktopOnly}>\r\n      <NavigationItems isAuthorised ={props.isAuth} />\r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default toolbar;\r\n","import React from \"react\";\r\nimport classes from \"./BackDrop.module.css\";\r\n\r\nconst backDrop = (props) =>\r\n  props.show ? (\r\n    <div className={classes.BackDrop} onClick={props.clicked}></div>\r\n  ) : null;\r\n\r\nexport default backDrop;\r\n","import React from \"react\";\r\nimport Logo from \"../../Logo/Logo\";\r\nimport NavigationItems from \"../NavigationItems/NavigationItems\";\r\nimport classes from \"./SideDrawer.module.css\";\r\nimport BackDrop from \"../../UI/Backdrop/Backdrop\";\r\nimport Aux from \"../../../hoc/Auxy\";\r\n\r\nconst sideDrawer = (props) => {\r\n  let attachClasses = [classes.SideDrawer, classes.Close];\r\n\r\n  if (props.open) {\r\n    attachClasses = [classes.SideDrawer, classes.Open];\r\n  }\r\n  return (\r\n    <Aux>\r\n      <BackDrop show={props.open} clicked={props.closed} />\r\n      <div className={attachClasses.join(\" \")}>\r\n        <div className={classes.Logo}>\r\n          <Logo />\r\n        </div>\r\n        <nav>\r\n          <NavigationItems isAuthorised ={props.isAuth}/>\r\n        </nav>\r\n      </div>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux'\r\nimport Aux from \"../../hoc/Auxy\";\r\nimport Toolbar from \"../Navigation/Toolbar/Toolbar\";\r\nimport classes from \"./Layout.module.css\";\r\nimport SideDrawer from \"../Navigation/SideDrawer/SideDrawer\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    showSideDrawer: false\r\n  };\r\n\r\n  sideDrawerClosedHandler = () => {\r\n    this.setState({ showSideDrawer: false });\r\n  };\r\n\r\n  sideDrawerToggleHandler = () => {\r\n    this.setState((prevState) => {\r\n      return { showSideDrawer: !prevState.showSideDrawer };\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Aux>\r\n        <Toolbar isAuth={this.props.isAutherized} drawerToggleClicked={this.sideDrawerToggleHandler} />\r\n        <SideDrawer \r\n          isAuth={this.props.isAutherized}\r\n          closed={this.sideDrawerClosedHandler}\r\n          open={this.state.showSideDrawer}\r\n        />\r\n        <main className={classes.Content}>{this.props.children}</main>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAutherized : state.auth.token != null\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout);\r\n","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL : 'https://my-react-burger-cf0bc.firebaseio.com'\r\n})\r\n\r\nexport default instance","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type:actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token,userId) => {\r\n    return {\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        idToken:token,\r\n        userId:userId\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type:actionTypes.AUTH_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationDate\")\r\n    localStorage.removeItem(\"userId\")\r\n    return {\r\n        type:actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, expirationTime *1000);\r\n    }\r\n}\r\n\r\nexport const auth = (email,password,isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB4JzDs9KnhzyHX2e0vzuk9aZujYwsmCiw\"\r\n        if(!isSignUp){\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB4JzDs9KnhzyHX2e0vzuk9aZujYwsmCiw\"\r\n        }\r\n        axios.post(url,authData)\r\n            .then(resp=>{\r\n                const expirationDate = new Date(new Date().getTime() + resp.data.expiresIn * 1000)\r\n                localStorage.setItem(\"token\",resp.data.idToken)\r\n                localStorage.setItem(\"expirationDate\",expirationDate)\r\n                localStorage.setItem(\"userId\",resp.data.localId)\r\n                dispatch(authSuccess(resp.data.idToken,resp.data.localId))\r\n                dispatch(checkAuthTimeout(resp.data.expiresIn))\r\n            })\r\n            .catch(err=>{\r\n                dispatch(authFail(err.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type:actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path:path\r\n    }\r\n}\r\n\r\nexport const checkAuthStatus = () => {\r\n    return dispatch => {\r\n        const token =localStorage.getItem(\"token\")\r\n        \r\n        if(!token){\r\n            dispatch(logout())\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem(\"expirationDate\"))\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout())\r\n            }else{\r\n                const userId = localStorage.getItem(\"userId\")\r\n            dispatch(authSuccess(localStorage.getItem(\"token\"),userId))\r\n            dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n            }\r\n        }\r\n    }\r\n}","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS' ;\r\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENTS';\r\nexport const SET_INGREDIENTS = 'SET_INGREDENTS';\r\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\nexport const FETCH_ORDER_START = 'FETCH_ORDER_START';\r\nexport const FETCH_ORDER_SUCCESS = 'FETCH_ORDER_SUCCESS';\r\nexport const FETCH_ORDER_FAIL = 'FETCH_ORDER_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH'","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classes from \"./BurgerIgredient.module.css\";\r\n\r\nclass BurgerIngredient extends Component {\r\n  render() {\r\n    let ingredient = null;\r\n\r\n    switch (this.props.type) {\r\n      case \"bread-bottom\":\r\n        ingredient = <div className={classes.BreadBottom}></div>;\r\n        break;\r\n      case \"bread-top\":\r\n        ingredient = (\r\n          <div className={classes.BreadTop}>\r\n            <div className={classes.Seeds1}></div>\r\n            <div className={classes.Seeds2}></div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"meat\":\r\n        ingredient = <div className={classes.Meat}></div>;\r\n        break;\r\n      case \"cheese\":\r\n        ingredient = <div className={classes.Cheese}></div>;\r\n        break;\r\n      case \"bacon\":\r\n        ingredient = <div className={classes.Bacon}></div>;\r\n        break;\r\n      case \"salad\":\r\n        ingredient = <div className={classes.Salad}></div>;\r\n        break;\r\n      default:\r\n        ingredient = null;\r\n    }\r\n    return ingredient;\r\n  }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n  type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;\r\n","import React from \"react\";\r\nimport classes from \"./Burger.module.css\";\r\nimport BurgerIngredient from \"./BurgerIngredient/BurgerIngredient\";\r\n\r\nconst burger = (props) => {\r\n  let transformedIngredients = Object.keys(props.ingredients)\r\n    .map((igKey) => {\r\n      return [...Array(props.ingredients[igKey])].map((_, i) => {\r\n        return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n      });\r\n    })\r\n    .reduce((arr, el) => {\r\n      return arr.concat(el);\r\n    }, []);\r\n  if (transformedIngredients.length === 0) {\r\n    transformedIngredients = <p>Please start adding ingredients</p>;\r\n  }\r\n  return (\r\n    <div className={classes.Burger}>\r\n      <BurgerIngredient type=\"bread-top\" />\r\n      {transformedIngredients}\r\n      <BurgerIngredient type=\"bread-bottom\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default burger;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControl.module.css\";\r\nconst buildControl = (props) => (\r\n  <div className={classes.BuildControl}>\r\n    <div className={classes.Label}>{props.label}</div>\r\n    <button\r\n      className={classes.Less}\r\n      onClick={props.removed}\r\n      disabled={props.disabled}\r\n    >\r\n      Less\r\n    </button>\r\n    <button className={classes.More} onClick={props.added}>\r\n      More\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default buildControl;\r\n","import React from \"react\";\r\nimport classes from \"./BuildControls.module.css\";\r\nimport BuildControl from \"./BuildControl/BuildControl\";\r\nconst controls = [\r\n  { label: \"Salad\", type: \"salad\" },\r\n  { label: \"Bacon\", type: \"bacon\" },\r\n  { label: \"Cheese\", type: \"cheese\" },\r\n  { label: \"Meat\", type: \"meat\" }\r\n];\r\n\r\nconst buildControls = (props) => (\r\n  <div className={classes.BuildControls}>\r\n    <p>\r\n      Current Price: <strong>{props.price.toFixed(2)}</strong>\r\n    </p>\r\n    {controls.map((ctrl) => {\r\n      return (\r\n        <BuildControl\r\n          key={ctrl.label}\r\n          label={ctrl.label}\r\n          added={() => props.ingredientAdded(ctrl.type)}\r\n          removed={() => props.ingredientRemoved(ctrl.type)}\r\n          disabled={props.disabled[ctrl.type]}\r\n        />\r\n      );\r\n    })}\r\n    <button\r\n      className={classes.OrderButton}\r\n      disabled={!props.purchasable}\r\n      onClick={props.ordered}\r\n    >\r\n      {props.isAuth? \"Order Now\":\"Log in to Order\"}\r\n    </button>\r\n  </div>\r\n);\r\nexport default buildControls;\r\n","import React from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Aux from \"../../../hoc/Auxy\";\r\nimport BackDrop from \"../Backdrop/Backdrop\";\r\n\r\nconst modal = (props) => (\r\n  <Aux>\r\n    <BackDrop show={props.show} clicked={props.modalClosed} />\r\n    <div\r\n      className={classes.Modal}\r\n      style={{\r\n        transform: props.show ? \"TranslateY(0)\" : \"TranslateY(-100vh)\",\r\n        opacity: props.show ? \"1\" : \"0\"\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  </Aux>\r\n);\r\n\r\nexport default modal;\r\n","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst button = (props) => (\r\n  <button\r\n    onClick={props.clicked}\r\n    className={[classes.Button, classes[props.btnType]].join(\" \")}\r\n    disabled={props.disabled}\r\n  >\r\n    {props.children}\r\n  </button>\r\n);\r\n\r\nexport default button;\r\n","import React from \"react\";\r\nimport Aux from \"../../../hoc/Auxy\";\r\nimport Button from \"../../UI/Button/Button\";\r\n\r\nconst orderSummary = (props) => {\r\n  const ingredientSummary = Object.keys(props.ingredients).map((igKey) => {\r\n    return (\r\n      <li key={igKey}>\r\n        <span style={{ textTransform: \"capitalize\" }}>{igKey}</span>:\r\n        {props.ingredients[igKey]}\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <Aux>\r\n      <h3>Your Order</h3>\r\n      <p>A delicious burger with following ingredients:</p>\r\n      <ul>{ingredientSummary}</ul>\r\n      <p>\r\n        <strong>Total Price: {props.price.toFixed(2)}</strong>\r\n      </p>\r\n      <p>Continue to checkout?</p>\r\n      <Button btnType=\"Danger\" clicked={props.purchaseCanceled}>\r\n        Cancel\r\n      </Button>\r\n      <Button btnType=\"Success\" clicked={props.purchaseContinue}>\r\n        Continue\r\n      </Button>\r\n    </Aux>\r\n  );\r\n};\r\n\r\nexport default orderSummary;\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React , {Component} from 'react'\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxy'\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error:null\r\n        };\r\n        \r\n        componentWillMount(){\r\n           this.reqInterceptor = axios.interceptors.request.use(req=>{\r\n                this.setState({error:null});\r\n                return req\r\n            })\r\n            this.resInterceptor = axios.interceptors.response.use(res=>res,error=>{\r\n                this.setState({error:error})\r\n            })\r\n        }\r\n\r\n        componentWillUnmount(){\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n\r\n        errorConfirmedHandler = () =>{\r\n            this.setState({error:null});\r\n        }\r\n        render(){\r\n            return (\r\n                <Aux>\r\n                    <Modal \r\n                    show={this.state.error!=null}\r\n                    modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message :null}\r\n                    </Modal>\r\n                <WrappedComponent {...this.props} />\r\n                </Aux>\r\n    \r\n            );\r\n        }\r\n    } \r\n}\r\n\r\nexport default withErrorHandler","import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as burgerBuilderActions from '../../store/actions/index'\r\nimport axios from '../../axios-orders'\r\n\r\nimport Aux from \"../../hoc/Auxy\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n// const INGREDIENT_PRICES = {\r\n//   salad: 0.5,\r\n//   cheese: 0.4,\r\n//   meat: 1.3,\r\n//   bacon: 0.7\r\n// };\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    purchasing: false,\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.props.onInitIngredients()\r\n  }\r\n\r\n  updatePurchaseState(ingredients) {\r\n       const sum = Object.keys(ingredients)\r\n        .map((igKey) => {\r\n          return ingredients[igKey];\r\n        })\r\n        .reduce((sum, el) => {\r\n          return sum + el;\r\n        }, 0);\r\n    return sum > 0 ;\r\n  }\r\n\r\n  // addIngredientHandler = (type) => {\r\n  //   const oldCount = this.state.ingredients[type];\r\n  //   const updatedCount = oldCount + 1;\r\n  //   const updatedIngredients = {\r\n  //     ...this.state.ingredients\r\n  //   };\r\n  //   updatedIngredients[type] = updatedCount;\r\n  //   const priceAddition = INGREDIENT_PRICES[type];\r\n  //   const oldPrice = this.state.totalPrice;\r\n  //   const newPrice = oldPrice + priceAddition;\r\n  //   this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n  //   this.updatePurchaseState(updatedIngredients);\r\n  // };\r\n\r\n  // removeIngredientHandler = (type) => {\r\n  //   const oldCount = this.state.ingredients[type];\r\n  //   if (oldCount <= 0) {\r\n  //     return;\r\n  //   }\r\n  //   const updatedCount = oldCount - 1;\r\n  //   const updatedIngredients = {\r\n  //     ...this.state.ingredients\r\n  //   };\r\n  //   updatedIngredients[type] = updatedCount;\r\n  //   const priceDeduction = INGREDIENT_PRICES[type];\r\n  //   const oldPrice = this.state.totalPrice;\r\n  //   const newPrice = oldPrice - priceDeduction;\r\n  //   this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n  //   this.updatePurchaseState(updatedIngredients);\r\n  // };\r\n\r\n  purchaseHandler = () => {\r\n    if(this.props.isAuthenticated){\r\n      this.setState({ purchasing: true });\r\n    }else{\r\n      this.props.onSetAuthRedirectPath('/checkout')\r\n      this.props.history.push(\"/auth\")\r\n    }\r\n    \r\n  };\r\n  purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n  purchaseContinueHandler = () => {\r\n    // const queryParams = [];\r\n    // for(let i in this.state.ingredients){\r\n    //   queryParams.push(encodeURIComponent(i) + '='+ encodeURIComponent(this.state.ingredients[i]))\r\n    // }\r\n    // queryParams.push('price='+this.props.totPrc)\r\n    // const queryString = queryParams.join('&')\r\n    this.props.onPurchaseInit()\r\n    this.props.history.push('checkout')\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.props.ingr\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n \r\n    let orderSummary = null\r\n    \r\n  let burger =this.props.error?<p>Data can't be loaded</p>: <Spinner />\r\n\r\n  if(this.props.ingr){\r\n    orderSummary = <OrderSummary\r\n    ingredients={this.props.ingr}\r\n    purchaseCanceled={this.purchaseCancelHandler}\r\n    purchaseContinue={this.purchaseContinueHandler}\r\n    price={this.props.totPrc}\r\n  />\r\n\r\n   burger =  (<Aux>\r\n      <Burger ingredients={this.props.ingr} />\r\n        <BuildControls\r\n          isAuth = {this.props.isAuthenticated}\r\n          ingredientAdded={this.props.onIngredientAdded}\r\n          ingredientRemoved={this.props.onIngredientRemoved}\r\n          disabled={disabledInfo}\r\n          purchasable={this.updatePurchaseState(this.props.ingr)}\r\n          ordered={this.purchaseHandler}\r\n          price={this.props.totPrc}\r\n        />\r\n    </Aux>)\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchaseCancelHandler}\r\n        >\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps= state => {\r\n  return {\r\n    ingr:state.burgerBuilder.ingredients,\r\n    totPrc:state.burgerBuilder.totalPrice,\r\n    error:state.burgerBuilder.error,\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onIngredientAdded : (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n    onIngredientRemoved : (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n    onInitIngredients : () => dispatch(burgerBuilderActions.initIngredients()),\r\n    onPurchaseInit : () => dispatch(burgerBuilderActions.purchaseInit()),\r\n    onSetAuthRedirectPath : (path) => dispatch(burgerBuilderActions.setAuthRedirectPath(path))\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders'\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type:actionTypes.ADD_INGREDIENTS,\r\n        ingredientName:name\r\n    }\r\n}\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type:actionTypes.REMOVE_INGREDIENTS,\r\n        ingredientName:name\r\n    }\r\n}\r\n\r\nexport const setIngredients = (ingredients) => {\r\n    return {\r\n        type:actionTypes.SET_INGREDIENTS,\r\n        ingredients:ingredients\r\n    }\r\n}\r\n\r\nexport const fetchIngredientsFailed = () => {\r\n    return {\r\n        type:actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n}\r\n\r\n// const testIng = {\r\n//     salad:0,\r\n//     bacon:0,\r\n//     cheese:0,\r\n//     meat:0\r\n// }\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('/ingredients.json')\r\n        .then(resp=>{\r\n          dispatch(setIngredients(resp.data))\r\n        })\r\n        .catch(error=>{\r\n          dispatch(fetchIngredientsFailed())\r\n        })\r\n    }\r\n    // return setIngredients(testIng)\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id,orderData) => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData:orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token,orderData)\r\n        .then(resp=>{\r\n            dispatch(purchaseBurgerSuccess(resp.data.name,orderData))\r\n           \r\n        })\r\n        .catch(error=>{\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type:actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOrderSuccess = (order) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_SUCCESS,\r\n        order:order\r\n    }\r\n}\r\n\r\nexport const fetchOrderFail = (error) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDER_START\r\n    }\r\n}\r\n\r\nexport const fetchOrder = (token,userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart())\r\n        const queryParams = '?auth=' + token +'&orderBy=\"userId\"&equalTo=\"'+userId + '\"'\r\n        axios.get('/orders.json'+queryParams)\r\n        .then(res=>{\r\n            const fetchedData = [];\r\n            for(let key in res.data){\r\n                fetchedData.push({\r\n                    ...res.data[key],\r\n                    id:key\r\n                })\r\n            }\r\n            dispatch(fetchOrderSuccess(fetchedData))\r\n        })\r\n        .catch(err=>{\r\n            dispatch(fetchOrderFail())\r\n        })\r\n    }\r\n}","import React from 'react';\r\nimport Burger from '../../Burger/Burger'\r\nimport Button from '../../UI/Button/Button'\r\nimport classes from './CheckoutSummary.module.css'\r\n\r\nconst checkoutSummary = (props) =>{\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope it tastes well!</h1>\r\n            <div style ={{width:'100%',margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button clicked={props.checkoutCanceled} btnType='Danger' >Cancel</Button>\r\n            <Button clicked={props.checkoutContinued} btnType='Success'>Continue</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement]\r\n\r\n    if(props.invalid && props.shouldValidate && props.touched){\r\n        inputClasses.push(classes.Invalid)\r\n    }\r\n    switch(props.elementType){\r\n        case('input'):\r\n            inputElement = <input className={inputClasses.join(\" \")} \r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break;\r\n        case('textarea'):\r\n            inputElement = <textarea className={inputClasses.join(\" \")} \r\n            {...props.elementConfig} \r\n            value={props.value}\r\n            onChange={props.changed}/>;\r\n            break;\r\n        case('select'):\r\n            inputElement = (\r\n            <select \r\n                className={inputClasses.join(\" \")} \r\n                value={props.value}\r\n                onChange={props.changed}>\r\n                {props.elementConfig.options.map(option=>(\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.displayValue}\r\n                    </option>\r\n                ))}\r\n            </select>);\r\n            break;\r\n        default:\r\n            inputElement = <input className={inputClasses.join(\" \")} \r\n            {...props.elementConfig} \r\n            value={[props.value]}/>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.Input}>\r\n            <label>{props.label}</label>\r\n            {inputElement}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default input ","\r\nexport const chechValidity = (value,rules) =>{\r\n    let isValid = true;\r\n    if(rules.required){\r\n        isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if(rules.minlength){\r\n        isValid = value.length >= rules.minlength && isValid;\r\n    }\r\n\r\n    if(rules.maxLength){\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if(rules.isEmail){\r\n        const pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n        isValid = pattern.test(value) && isValid\r\n    }\r\n    \r\n\r\n    return isValid;\r\n}","import React , {Component} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from './ContactData.module.css'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport axios from '../../../axios-orders';\r\nimport * as actions from '../../../store/actions/index'\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport { chechValidity } from '../../../shared/validation'\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm:{\r\n            name:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your name'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            street:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Street'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            zip:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'ZIP Code'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required: true,\r\n                    minlength:5,\r\n                    maxLength:10\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            country:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Country'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your mail'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required: true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            deliveryMethod: {\r\n                elementType:'select',\r\n                elementConfig:{\r\n                    options:[\r\n                        {value:'fastest',displayValue:'Fastest'},\r\n                        {value:'cheapest',displayValue:'Cheapest'}\r\n                    ]\r\n                },\r\n                value:'fastest',\r\n                validation:{},\r\n                valid:true\r\n            },\r\n        },\r\n        formIsValid:false,\r\n\r\n    }\r\n\r\n\r\n    \r\n\r\n    orderHandler = (event) =>{\r\n        event.preventDefault()\r\n    const formData = {}\r\n    for(let orderDataIdentifier in this.state.orderForm){\r\n        formData[orderDataIdentifier] = this.state.orderForm[orderDataIdentifier].value\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ingr,\r\n      price: this.props.totPrc,\r\n      orderData:formData,\r\n      userId:this.props.userId\r\n    }\r\n    this.props.onOrderBurger(order,this.props.token)\r\n}\r\n    \r\n\r\n    inputChangedHandler = (event,inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        }\r\n        updatedFormElement.value = event.target.value;\r\n        updatedFormElement.valid = chechValidity(updatedFormElement.value,updatedFormElement.validation)\r\n        updatedFormElement.touched = true;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        let formIsValid = true;\r\n        for(let formIdentifier in updatedOrderForm){\r\n            formIsValid = updatedOrderForm[formIdentifier].valid && formIsValid;\r\n        }\r\n        this.setState({orderForm:updatedOrderForm,formIsValid:formIsValid})\r\n        console.log(updatedFormElement.valid)\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.orderForm[key]\r\n            })\r\n\r\n        }\r\n\r\n        let form = (<form onSubmit={this.orderHandler}>\r\n            {formElementsArray.map(formElement=>(\r\n                <Input key={formElement.id}\r\n                       elementType={formElement.config.elementType}\r\n                       elementConfig={formElement.config.elementConfig}\r\n                       value={formElement.config.value}\r\n                       invalid ={!formElement.config.valid}\r\n                       shouldValidate={formElement.config.validation}\r\n                       touched = {formElement.config.touched}\r\n                       changed={(event)=>this.inputChangedHandler(event,formElement.id)} />\r\n            ))}\r\n            <Button btnType = 'Success' disabled={!this.state.formIsValid} >Order</Button>\r\n        </form>);\r\n\r\n        if(this.props.loading){\r\n           form = <Spinner />\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h1>Enter your contact data </h1>\r\n                {form}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingr:state.burgerBuilder.ingredients,\r\n        totPrc:state.burgerBuilder.totalPrice,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n   return{\r\n    onOrderBurger : (orderData,token) => dispatch(actions.purchaseBurger(orderData,token))\r\n   } \r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(ContactData,axios))","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Route , Redirect} from 'react-router-dom';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\r\nimport ContactData from './ContactData/ContactData'\r\n\r\nclass Checkout extends Component {\r\n\r\n    // componentWillMount() {\r\n    //     const query = new URLSearchParams(this.props.location.search);\r\n    //     const ingredients ={};\r\n    //     let price = 0;\r\n    //      for(let param of query.entries()){\r\n    //          if(param[0] === 'price'){\r\n    //             price = param[1]\r\n    //          }else{\r\n    //             ingredients[param[0]] = +param[1]\r\n    //          }\r\n    //      }\r\n\r\n    //      this.setState({ingredients:ingredients,totalPrice:price})\r\n    // }\r\n\r\n    checkoutCanceledHandler = () =>{\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n    render (){\r\n\r\n        let summary = <Redirect to='/' />\r\n        if(this.props.ingr){\r\n            let purchaseDone = this.props.purchasing? <Redirect to='/' />:null;\r\n            summary = (\r\n                <div>\r\n                    {purchaseDone}\r\n                <CheckoutSummary \r\n                ingredients={this.props.ingr}\r\n                checkoutCanceled={this.checkoutCanceledHandler}\r\n                checkoutContinued={this.checkoutContinuedHandler} />\r\n                <Route path={this.props.match.path + '/contact-data'} component={ContactData}/>\r\n             </div>\r\n            )\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ingr:state.burgerBuilder.ingredients,\r\n        purchasing:state.order.purchasing\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout)","import React from 'react';\r\nimport classes from './Order.module.css'\r\n\r\nconst order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for(let ingredientName in props.ingredients){\r\n        ingredients.push({\r\n            name:ingredientName,\r\n            amount:props.ingredients[ingredientName]\r\n        })\r\n    }\r\n    const ingredientOutput = ingredients.map(ig=>{\r\n    return <span \r\n                key={ig.name}\r\n                style={{textTransform:'capitalize',\r\n                        display:\"inline-block\",\r\n                        margin:'0 8px',\r\n                        border:'1px solid #ccc',\r\n                        padding:'5px'}}>{ig.name} ({ig.amount})</span>\r\n    })\r\n\r\n    return(\r\n    <div className={classes.Order}>\r\n        <p>Ingredients: {ingredientOutput}</p>\r\n        <p>Price:<strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n\r\n    )   \r\n}\r\n\r\nexport default order;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n       this.props.onFetchOrder(this.props.token,this.props.userId)\r\n    }\r\n\r\n    render() {\r\n        let spinner = <Spinner />\r\n        if(!this.props.loading){\r\n            spinner = (\r\n                this.props.orders.map(order=>(\r\n                    <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price}      />\r\n                ))\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {spinner}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        orders:state.order.orders,\r\n        loading:state.order.loading,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrder : (token,userId) => dispatch(actions.fetchOrder(token,userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index';\r\nimport {chechValidity} from '../../shared/validation'\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Mail address'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required: true,\r\n                    isEmail:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            }\r\n        },\r\n        isSignUp:true\r\n    }\r\n\r\n    componentDidMount(){\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/'){\r\n            this.props.onSetAuthRedirectPath()\r\n        }\r\n    }\r\n\r\n\r\n    inputChangedHandler = (event,controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value:event.target.value,\r\n                valid:chechValidity(event.target.value,this.state.controls[controlName].validation),\r\n                touched:true\r\n            }\r\n        }\r\n        this.setState({controls:updatedControls})\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value,this.state.isSignUp)\r\n    }\r\n\r\n    switchAuthModeHandler = () =>{\r\n        this.setState(prevState=>{\r\n            return {isSignUp: !prevState.isSignUp}\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n        for(let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.controls[key]\r\n            })\r\n\r\n        }\r\n\r\n        let form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid ={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched = {formElement.config.touched}\r\n                changed={(event)=>this.inputChangedHandler(event,formElement.id)} \r\n                />\r\n        ))\r\n\r\n        if(this.props.loading){\r\n            form = <Spinner />\r\n        }\r\n\r\n        let errorMessage = null;\r\n\r\n        if(this.props.error){\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            );\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if(this.props.isAuthenticated){\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n            <Button \r\n            btnType=\"Danger\"\r\n            clicked={this.switchAuthModeHandler} >SWICH TO {this.state.isSignUp? \"SIGNIN\": \"SIGNUP\"}</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading:state.auth.loading,\r\n        error:state.auth.error,\r\n        isAuthenticated:state.auth.token !== null,\r\n        buildingBurger:state.burgerBuilder.building,\r\n        authRedirectPath:state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email,password,isSignUp) => dispatch(actions.auth(email,password,isSignUp)),\r\n        onSetAuthRedirectPath: () => dispatch(actions.setAuthRedirectPath(\"/\"))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Auth)","import React, { Component } from 'react';\r\nimport { logout } from '../../../store/actions/index'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Logout extends Component {\r\n    componentDidMount(){\r\n        this.props.onLogout()\r\n    }\r\n\r\n    render(){\r\n        return <Redirect to='/' />\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n      onLogout : () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Logout)","import React, { Component } from \"react\";\nimport {Route ,Redirect} from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport \"./styles.css\";\nimport Layout from \"./components/Layout/Layout\";\nimport BurgerBuilder from \"./containers/BurgerBulider/BurgerBuilder\";\nimport Checkout from './containers/Checkout/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport Auth from './containers/Auth/Auth'\nimport Logout from './containers/Auth/Logout/Logout'\nimport * as actions from './store/actions/index'\n\nclass App extends Component {\n  componentDidMount(){\n    this.props.onAutoSignIn()\n  }\n\n  render() {\n\n    let routes = (\n      <Layout>\n        <Route path=\"/\" exact component={BurgerBuilder}/>\n        <Route path=\"/auth\" component={Auth}/>\n        <Redirect to=\"/\" />\n      </Layout>\n    )\n\n    if(this.props.isAuthenticated){\n      routes = (\n        <Layout>\n        <Route path=\"/\" exact component={BurgerBuilder}/>\n        <Route path=\"/checkout\" component={Checkout}/>\n        <Route path=\"/logout\" component={Logout}/>\n        <Route path=\"/orders\" component={Orders}/>\n        <Redirect to=\"/\" />\n      </Layout>\n      )\n    }\n\n    return (<div className=\"App\">\n      {routes}\n    </div>\n    )\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAutoSignIn : () => dispatch(actions.checkAuthStatus())\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App)\n","import * as actionTypes from '../actions/actionTypes' ;\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice:4,\r\n    error: false,\r\n    building:false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n  };\r\n\r\nconst reducer = (state=initialState,action) => {\r\n\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]:state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\r\n                building:true\r\n            }\r\n        case actionTypes.REMOVE_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]:state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\r\n                building:true\r\n            }\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return{\r\n                ...state,\r\n                ingredients:action.ingredients,\r\n                totalPrice:4,\r\n                error:false,\r\n                building:false\r\n            }\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return{\r\n                ...state,\r\n                error:true\r\n            }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default reducer","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders:[],\r\n    loading:false,\r\n    purchasing:false\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    switch(action.type){\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchasing:false\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id:action.orderId,\r\n            }\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                purchasing:true,\r\n                orders: state.orders.concat(newOrder)\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading:false\r\n            }\r\n        case actionTypes.FETCH_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders:action.order,\r\n                loading:false\r\n            }\r\n         case actionTypes.FETCH_ORDER_START:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            }\r\n         case actionTypes.FETCH_ORDER_FAIL:\r\n            return {\r\n                ...state,\r\n                loading:false\r\n            }\r\n        default :\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport default reducer","\r\nexport const updatedObject = (state,object)=>{\r\n    return {\r\n        ...state,\r\n        ...object\r\n    };\r\n};\r\n","import * as actionTypes from '../actions/actionTypes';\r\nimport { updatedObject } from \"../utility\"\r\nconst initialState = {\r\n    token:null,\r\n    userId:null,\r\n    error:null,\r\n    loading:false,\r\n    authRedirectPath:'/'\r\n}\r\n\r\nconst authStart = (state,action) => {\r\n    return updatedObject(state,{error:null,loading:true})\r\n}\r\n\r\nconst authSuccess = (state,action) => {\r\n    return updatedObject(state,{\r\n        token:action.idToken,\r\n        userId:action.userId,\r\n        error:null,\r\n        loading:false\r\n    })\r\n}\r\n\r\nconst authFail = (state,action) => {\r\n    return updatedObject(state,{error:action.error,loading:false})\r\n}\r\n\r\nconst authLogout = (state,action) => {\r\n    return updatedObject(state,{token:null,userId:null})\r\n}\r\n\r\nconst setAuthRedirectPath = (state,action) => {\r\n    return updatedObject(state,{authRedirectPath:action.path})\r\n}\r\n\r\nconst reducer = (state = initialState,action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START: return authStart(state,action);\r\n        case actionTypes.AUTH_SUCCESS: return authSuccess(state,action);\r\n        case actionTypes.AUTH_FAIL: return authFail(state,action);\r\n        case actionTypes.AUTH_LOGOUT: return authLogout(state,action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH: return setAuthRedirectPath(state,action);\r\n    default: \r\n        return state ;\r\n    }\r\n}\r\n\r\nexport default reducer","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter} from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport {createStore,applyMiddleware,compose,combineReducers} from 'redux';\nimport thunk from 'redux-thunk';\nimport App from \"./App\";\nimport reducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order';\nimport authReducer from './store/reducers/auth'\n\nconst composeEnhancers = process.env.NODE_ENV === 'test'?  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__: null || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder:reducer,\n  order:orderReducer,\n  auth:authReducer\n})\n\n\nconst store = createStore(rootReducer,composeEnhancers(\n  applyMiddleware(thunk)\n))\n\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n      <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}