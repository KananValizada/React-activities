{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\src\\\\containers\\\\Orders\\\\Orders.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../store/actions/index';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nvar Orders = /*#__PURE__*/function (_Component) {\n  _inherits(Orders, _Component);\n\n  var _super = _createSuper(Orders);\n\n  function Orders() {\n    _classCallCheck(this, Orders);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Orders, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onFetchOrder(this.props.token, this.props.userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var spinner = /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 23\n        }\n      });\n\n      if (!this.props.loading) {\n        spinner = this.props.orders.map(function (order) {\n          return /*#__PURE__*/React.createElement(Order, {\n            key: order.id,\n            ingredients: order.ingredients,\n            price: order.price,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 21\n            }\n          });\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }\n      }, spinner);\n    }\n  }]);\n\n  return Orders;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onFetchOrder: function onFetchOrder(token, userId) {\n      return dispatch(actions.fetchOrder(token, userId));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","map":{"version":3,"sources":["C:/Users/user/Desktop/New folder/React-activities/my-burger/src/containers/Orders/Orders.js"],"names":["React","Component","connect","Order","axios","withErrorHandler","actions","Spinner","Orders","props","onFetchOrder","token","userId","spinner","loading","orders","map","order","id","ingredients","price","mapStateToProps","state","auth","mapDispatchToProps","dispatch","fetchOrder"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6CAA7B;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,OAAP,MAAoB,qCAApB;;IAEMC,M;;;;;;;;;;;;;wCAEkB;AACjB,WAAKC,KAAL,CAAWC,YAAX,CAAwB,KAAKD,KAAL,CAAWE,KAAnC,EAAyC,KAAKF,KAAL,CAAWG,MAApD;AACF;;;6BAEQ;AAAA;;AACL,UAAIC,OAAO,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;;AACA,UAAG,CAAC,KAAKJ,KAAL,CAAWK,OAAf,EAAuB;AACnBD,QAAAA,OAAO,GACH,KAAKJ,KAAL,CAAWM,MAAX,CAAkBC,GAAlB,CAAsB,UAAAC,KAAK;AAAA,8BACvB,oBAAC,KAAD;AACA,YAAA,GAAG,EAAEA,KAAK,CAACC,EADX;AAEA,YAAA,WAAW,EAAED,KAAK,CAACE,WAFnB;AAGA,YAAA,KAAK,EAAEF,KAAK,CAACG,KAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADuB;AAAA,SAA3B,CADJ;AAQH;;AACD,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKP,OADL,CADJ;AAKH;;;;EAvBgBZ,S;;AA2BrB,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHP,IAAAA,MAAM,EAACO,KAAK,CAACL,KAAN,CAAYF,MADhB;AAEHD,IAAAA,OAAO,EAACQ,KAAK,CAACL,KAAN,CAAYH,OAFjB;AAGHH,IAAAA,KAAK,EAACW,KAAK,CAACC,IAAN,CAAWZ;AAHd,GAAP;AAKH,CAND;;AAQA,IAAMa,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHf,IAAAA,YAAY,EAAG,sBAACC,KAAD,EAAOC,MAAP;AAAA,aAAkBa,QAAQ,CAACnB,OAAO,CAACoB,UAAR,CAAmBf,KAAnB,EAAyBC,MAAzB,CAAD,CAA1B;AAAA;AADZ,GAAP;AAGH,CAJD;;AAMA,eAAeV,OAAO,CAACmB,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CnB,gBAAgB,CAACG,MAAD,EAAQJ,KAAR,CAA5D,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Order from '../../components/Order/Order'\r\nimport axios from '../../axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index'\r\nimport Spinner from '../../components/UI/Spinner/Spinner'\r\n\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n       this.props.onFetchOrder(this.props.token,this.props.userId)\r\n    }\r\n\r\n    render() {\r\n        let spinner = <Spinner />\r\n        if(!this.props.loading){\r\n            spinner = (\r\n                this.props.orders.map(order=>(\r\n                    <Order \r\n                    key={order.id}\r\n                    ingredients={order.ingredients}\r\n                    price={order.price}      />\r\n                ))\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {spinner}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return { \r\n        orders:state.order.orders,\r\n        loading:state.order.loading,\r\n        token:state.auth.token\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrder : (token,userId) => dispatch(actions.fetchOrder(token,userId))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(Orders,axios));"]},"metadata":{},"sourceType":"module"}