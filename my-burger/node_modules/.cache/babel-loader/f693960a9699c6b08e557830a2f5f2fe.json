{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as actionTypes from '../actions/actionTypes';\nvar initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false\n};\nvar INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        ingredients: _objectSpread(_objectSpread({}, state.ingredients), {}, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        }),\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    case actionTypes.REMOVE_INGREDIENTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        ingredients: _objectSpread(_objectSpread({}, state.ingredients), {}, {\n          [action.ingredientName]: state.ingredients[action.ingredientName] - 1\n        }),\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\n      });\n\n    case actionTypes.SET_INGREDIENTS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        ingredients: action.ingredients,\n        error: false\n      });\n\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: true\n      });\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/user/Desktop/New folder/React-activities/my-burger/src/store/reducers/burgerBuilder.js"],"names":["actionTypes","initialState","ingredients","totalPrice","error","INGREDIENT_PRICES","salad","cheese","meat","bacon","reducer","state","action","type","ADD_INGREDIENTS","ingredientName","REMOVE_INGREDIENTS","SET_INGREDIENTS","FETCH_INGREDIENTS_FAILED"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AAEA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,IADI;AAEjBC,EAAAA,UAAU,EAAC,CAFM;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,IAAMC,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,GADe;AAEtBC,EAAAA,MAAM,EAAE,GAFc;AAGtBC,EAAAA,IAAI,EAAE,GAHgB;AAItBC,EAAAA,KAAK,EAAE;AAJe,CAA1B;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAA+B;AAAA,MAA9BC,KAA8B,uEAAxBV,YAAwB;AAAA,MAAXW,MAAW;;AAE3C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKb,WAAW,CAACc,eAAjB;AACI,6CACOH,KADP;AAEIT,QAAAA,WAAW,kCACJS,KAAK,CAACT,WADF;AAEP,WAACU,MAAM,CAACG,cAAR,GAAwBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C;AAF5D,UAFf;AAMIZ,QAAAA,UAAU,EAAGQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AANrD;;AAQJ,SAAKf,WAAW,CAACgB,kBAAjB;AACI,6CACOL,KADP;AAEIT,QAAAA,WAAW,kCACJS,KAAK,CAACT,WADF;AAEP,WAACU,MAAM,CAACG,cAAR,GAAwBJ,KAAK,CAACT,WAAN,CAAkBU,MAAM,CAACG,cAAzB,IAA2C;AAF5D,UAFf;AAMIZ,QAAAA,UAAU,EAAGQ,KAAK,CAACR,UAAN,GAAmBE,iBAAiB,CAACO,MAAM,CAACG,cAAR;AANrD;;AAQJ,SAAKf,WAAW,CAACiB,eAAjB;AACI,6CACON,KADP;AAEIT,QAAAA,WAAW,EAACU,MAAM,CAACV,WAFvB;AAGIE,QAAAA,KAAK,EAAC;AAHV;;AAKJ,SAAKJ,WAAW,CAACkB,wBAAjB;AACI,6CACOP,KADP;AAEIP,QAAAA,KAAK,EAAC;AAFV;AA1BR;;AAgCA,SAAOO,KAAP;AACH,CAnCD;;AAsCA,eAAeD,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes' ;\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice:4,\r\n    error: false\r\n};\r\n\r\nconst INGREDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.3,\r\n    bacon: 0.7\r\n  };\r\n\r\nconst reducer = (state=initialState,action) => {\r\n\r\n    switch(action.type){\r\n        case actionTypes.ADD_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]:state.ingredients[action.ingredientName] + 1\r\n                },\r\n                totalPrice : state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actionTypes.REMOVE_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients:{\r\n                    ...state.ingredients,\r\n                    [action.ingredientName]:state.ingredients[action.ingredientName] - 1\r\n                },\r\n                totalPrice : state.totalPrice - INGREDIENT_PRICES[action.ingredientName]\r\n            }\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return{\r\n                ...state,\r\n                ingredients:action.ingredients,\r\n                error:false\r\n            }\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return{\r\n                ...state,\r\n                error:true\r\n            }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\n\r\nexport default reducer"]},"metadata":{},"sourceType":"module"}