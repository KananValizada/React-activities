{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\my-app\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\my-app\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\my-app\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\my-app\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\my-app\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\my-app\\\\my-burger\\\\src\\\\containers\\\\Checkout\\\\ContactData\\\\ContactData.js\";\nimport React, { Component } from 'react';\nimport Button from '../../../components/UI/Button/Button';\nimport classes from './ContactData.module.css';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport Input from '../../../components/UI/Input/Input';\nimport axios from '../../../axios-orders';\n\nvar ContactData = /*#__PURE__*/function (_Component) {\n  _inherits(ContactData, _Component);\n\n  var _super = _createSuper(ContactData);\n\n  function ContactData() {\n    var _this;\n\n    _classCallCheck(this, ContactData);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      orderForm: {\n        name: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Your name'\n          },\n          value: ''\n        },\n        street: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Street'\n          },\n          value: ''\n        },\n        zip: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'ZIP Code'\n          },\n          value: ''\n        },\n        country: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'text',\n            placeholder: 'Country'\n          },\n          value: ''\n        },\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Your mail'\n          },\n          value: ''\n        },\n        deliveryMethod: {\n          elementType: 'select',\n          elementConfig: {\n            options: [{\n              value: 'fastest',\n              displayValue: 'Fastest'\n            }, {\n              value: 'cheapest',\n              displayValue: 'Cheapest'\n            }]\n          },\n          value: ''\n        }\n      },\n      loading: false\n    };\n\n    _this.orderHandler = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        loading: true\n      });\n\n      var orderData = {};\n\n      for (var orderDataIdentifier in _this.state.orderForm) {\n        orderData[orderDataIdentifier] = _this.state.orderForm[orderDataIdentifier].value;\n      }\n\n      var order = {\n        ingredients: _this.props.ingredients,\n        price: _this.props.totalPrice\n      };\n      axios.post('/orders.json', order).then(function (resp) {\n        _this.setState({\n          loading: false\n        });\n\n        _this.props.history.push('/');\n      }).catch(function (error) {\n        return _this.setState({\n          loading: false\n        });\n      });\n    };\n\n    _this.inputChangedHandler = function (event, inputIdentifier) {\n      var updatedOrderForm = _objectSpread({}, _this.state.orderForm);\n\n      var updatedFormElement = _objectSpread({}, updatedOrderForm[inputIdentifier]);\n\n      updatedFormElement.value = event.target.value;\n      updatedOrderForm[inputIdentifier] = updatedFormElement;\n\n      _this.setState({\n        orderForm: updatedOrderForm\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(ContactData, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.orderForm) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.orderForm[key]\n        });\n      }\n\n      var form = /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.orderHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }\n      }, formElementsArray.map(function (formElement) {\n        return /*#__PURE__*/React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 17\n          }\n        });\n      }), /*#__PURE__*/React.createElement(Button, {\n        btnType: \"Success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }\n      }, \"Order\"));\n\n      if (this.state.loading) {\n        form = /*#__PURE__*/React.createElement(Spinner, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 19\n          }\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.ContactData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }, \"Enter your contact data \"), form);\n    }\n  }]);\n\n  return ContactData;\n}(Component);\n\nexport default ContactData;","map":{"version":3,"sources":["C:/Users/user/Desktop/my-app/my-burger/src/containers/Checkout/ContactData/ContactData.js"],"names":["React","Component","Button","classes","Spinner","Input","axios","ContactData","state","orderForm","name","elementType","elementConfig","type","placeholder","value","street","zip","country","email","deliveryMethod","options","displayValue","loading","orderHandler","event","preventDefault","setState","orderData","orderDataIdentifier","order","ingredients","props","price","totalPrice","post","then","resp","history","push","catch","error","inputChangedHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","formElementsArray","key","id","config","form","map","formElement"],"mappings":"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","sourcesContent":["import React , {Component} from 'react'\r\nimport Button from '../../../components/UI/Button/Button'\r\nimport classes from './ContactData.module.css'\r\nimport Spinner from '../../../components/UI/Spinner/Spinner'\r\nimport Input from '../../../components/UI/Input/Input'\r\nimport axios from '../../../axios-orders'\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm:{\r\n            name:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Your name'\r\n                },\r\n                value:''\r\n            },\r\n            street:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Street'\r\n                },\r\n                value:''\r\n            },\r\n            zip:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'ZIP Code'\r\n                },\r\n                value:''\r\n            },\r\n            country:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'text',\r\n                    placeholder:'Country'\r\n                },\r\n                value:''\r\n            },\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Your mail'\r\n                },\r\n                value:''\r\n            },\r\n            deliveryMethod: {\r\n                elementType:'select',\r\n                elementConfig:{\r\n                    options:[\r\n                        {value:'fastest',displayValue:'Fastest'},\r\n                        {value:'cheapest',displayValue:'Cheapest'}\r\n                    ]\r\n                },\r\n                value:''\r\n            },\r\n        },\r\n        loading:false\r\n\r\n    }\r\n\r\n    orderHandler = (event) =>{\r\n        event.preventDefault()\r\n    this.setState({loading:true})\r\n    const orderData = {}\r\n    for(let orderDataIdentifier in this.state.orderForm){\r\n        orderData[orderDataIdentifier] = this.state.orderForm[orderDataIdentifier].value\r\n    }\r\n    const order = {\r\n      ingredients: this.props.ingredients,\r\n      price: this.props.totalPrice,\r\n     \r\n    }\r\n    axios.post('/orders.json',order)\r\n        .then(resp=>{\r\n            this.setState({loading:false })\r\n            this.props.history.push('/')\r\n        })\r\n        .catch(error=>this.setState({loading:false}))\r\n\r\n    }\r\n\r\n    inputChangedHandler = (event,inputIdentifier) => {\r\n        const updatedOrderForm = {\r\n            ...this.state.orderForm\r\n        }\r\n        const updatedFormElement = {\r\n            ...updatedOrderForm[inputIdentifier]\r\n        }\r\n        updatedFormElement.value = event.target.value;\r\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\r\n        this.setState({orderForm:updatedOrderForm})\r\n\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n        for(let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.orderForm[key]\r\n            })\r\n\r\n        }\r\n\r\n        let form = (<form onSubmit={this.orderHandler}>\r\n            {formElementsArray.map(formElement=>(\r\n                <Input key={formElement.id}\r\n                       elementType={formElement.config.elementType}\r\n                       elementConfig={formElement.config.elementConfig}\r\n                       value={formElement.config.value}\r\n                       changed={(event)=>this.inputChangedHandler(event,formElement.id)} />\r\n            ))}\r\n            <Button btnType = 'Success' >Order</Button>\r\n        </form>);\r\n\r\n        if(this.state.loading){\r\n           form = <Spinner />\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h1>Enter your contact data </h1>\r\n                {form}\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default ContactData"]},"metadata":{},"sourceType":"module"}