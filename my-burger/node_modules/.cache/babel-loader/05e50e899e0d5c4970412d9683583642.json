{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\src\\\\containers\\\\Auth\\\\Auth.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../../components/UI/Input/Input';\nimport Button from '../../components/UI/Button/Button';\nimport classes from './Auth.module.css';\nimport * as actions from '../../store/actions/index';\n\nvar Auth = /*#__PURE__*/function (_Component) {\n  _inherits(Auth, _Component);\n\n  var _super = _createSuper(Auth);\n\n  function Auth() {\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      controls: {\n        email: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'email',\n            placeholder: 'Mail address'\n          },\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          elementType: 'input',\n          elementConfig: {\n            type: 'password',\n            placeholder: 'Password'\n          },\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      isSignUp: true\n    };\n\n    _this.inputChangedHandler = function (event, controlName) {\n      var updatedControls = _objectSpread(_objectSpread({}, _this.state.controls), {}, {\n        [controlName]: _objectSpread(_objectSpread({}, _this.state.controls[controlName]), {}, {\n          value: event.target.value,\n          valid: _this.chechValidity(event.target.value, _this.state.controls[controlName].validation),\n          touched: true\n        })\n      });\n\n      _this.setState({\n        controls: updatedControls\n      });\n    };\n\n    _this.submitHandler = function (event) {\n      event.preventDefault();\n\n      _this.props.onAuth(_this.state.controls.email.value, _this.state.controls.password.value);\n    };\n\n    _this.switchAuthModeHandler = function () {\n      _this.setState(function (prevState) {\n        return {\n          isSignUp: !prevState.isSignUp\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"chechValidity\",\n    value: function chechValidity(value, rules) {\n      var isValid = true;\n\n      if (rules.required) {\n        isValid = value.trim() !== '' && isValid;\n      }\n\n      if (rules.minLength) {\n        isValid = value.length >= rules.minLength && isValid;\n      }\n\n      if (rules.maxLength) {\n        isValid = value.length <= rules.maxLength && isValid;\n      }\n\n      if (rules.isEmail) {\n        var pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\n        isValid = pattern.test(value) && isValid;\n      }\n\n      return isValid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formElementsArray = [];\n\n      for (var key in this.state.controls) {\n        formElementsArray.push({\n          id: key,\n          config: this.state.controls[key]\n        });\n      }\n\n      var form = formElementsArray.map(function (formElement) {\n        return /*#__PURE__*/React.createElement(Input, {\n          key: formElement.id,\n          elementType: formElement.config.elementType,\n          elementConfig: formElement.config.elementConfig,\n          value: formElement.config.value,\n          invalid: !formElement.config.valid,\n          shouldValidate: formElement.config.validation,\n          touched: formElement.config.touched,\n          changed: function changed(event) {\n            return _this2.inputChangedHandler(event, formElement.id);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }\n        });\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.Auth,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.submitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }\n      }, form, /*#__PURE__*/React.createElement(Button, {\n        btnType: \"Success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, \"SUBMIT\")), /*#__PURE__*/React.createElement(Button, {\n        btnType: \"Danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, \"SWICH TO SIGNIN\"));\n    }\n  }]);\n\n  return Auth;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onAuth: function onAuth(email, password) {\n      return dispatch(actions.auth(email, password));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["C:/Users/user/Desktop/New folder/React-activities/my-burger/src/containers/Auth/Auth.js"],"names":["React","Component","connect","Input","Button","classes","actions","Auth","state","controls","email","elementType","elementConfig","type","placeholder","value","validation","required","isEmail","valid","touched","password","minLength","isSignUp","inputChangedHandler","event","controlName","updatedControls","target","chechValidity","setState","submitHandler","preventDefault","props","onAuth","switchAuthModeHandler","prevState","rules","isValid","trim","length","maxLength","pattern","test","formElementsArray","key","push","id","config","form","map","formElement","mapDispatchToProps","dispatch","auth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;IAEMC,I;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAC;AACFC,UAAAA,WAAW,EAAC,OADV;AAEFC,UAAAA,aAAa,EAAC;AACVC,YAAAA,IAAI,EAAC,OADK;AAEVC,YAAAA,WAAW,EAAC;AAFF,WAFZ;AAMFC,UAAAA,KAAK,EAAC,EANJ;AAOFC,UAAAA,UAAU,EAAC;AACPC,YAAAA,QAAQ,EAAE,IADH;AAEPC,YAAAA,OAAO,EAAC;AAFD,WAPT;AAWFC,UAAAA,KAAK,EAAC,KAXJ;AAYFC,UAAAA,OAAO,EAAC;AAZN,SADA;AAeNC,QAAAA,QAAQ,EAAC;AACLV,UAAAA,WAAW,EAAC,OADP;AAELC,UAAAA,aAAa,EAAC;AACVC,YAAAA,IAAI,EAAC,UADK;AAEVC,YAAAA,WAAW,EAAC;AAFF,WAFT;AAMLC,UAAAA,KAAK,EAAC,EAND;AAOLC,UAAAA,UAAU,EAAC;AACPC,YAAAA,QAAQ,EAAE,IADH;AAEPK,YAAAA,SAAS,EAAE;AAFJ,WAPN;AAWLH,UAAAA,KAAK,EAAC,KAXD;AAYLC,UAAAA,OAAO,EAAC;AAZH;AAfH,OADN;AA+BJG,MAAAA,QAAQ,EAAC;AA/BL,K;;UAyDRC,mB,GAAsB,UAACC,KAAD,EAAOC,WAAP,EAAuB;AACzC,UAAMC,eAAe,mCACd,MAAKnB,KAAL,CAAWC,QADG;AAEjB,SAACiB,WAAD,mCACO,MAAKlB,KAAL,CAAWC,QAAX,CAAoBiB,WAApB,CADP;AAEIX,UAAAA,KAAK,EAACU,KAAK,CAACG,MAAN,CAAab,KAFvB;AAGII,UAAAA,KAAK,EAAC,MAAKU,aAAL,CAAmBJ,KAAK,CAACG,MAAN,CAAab,KAAhC,EAAsC,MAAKP,KAAL,CAAWC,QAAX,CAAoBiB,WAApB,EAAiCV,UAAvE,CAHV;AAIII,UAAAA,OAAO,EAAC;AAJZ;AAFiB,QAArB;;AASA,YAAKU,QAAL,CAAc;AAACrB,QAAAA,QAAQ,EAACkB;AAAV,OAAd;AACH,K;;UAEDI,a,GAAgB,UAACN,KAAD,EAAW;AACvBA,MAAAA,KAAK,CAACO,cAAN;;AACA,YAAKC,KAAL,CAAWC,MAAX,CAAkB,MAAK1B,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BK,KAA5C,EAAkD,MAAKP,KAAL,CAAWC,QAAX,CAAoBY,QAApB,CAA6BN,KAA/E;AACH,K;;UAEDoB,qB,GAAwB,YAAK;AACzB,YAAKL,QAAL,CAAc,UAAAM,SAAS,EAAE;AACrB,eAAO;AAACb,UAAAA,QAAQ,EAAE,CAACa,SAAS,CAACb;AAAtB,SAAP;AACH,OAFD;AAGH,K;;;;;;;kCA7CaR,K,EAAMsB,K,EAAM;AACtB,UAAIC,OAAO,GAAG,IAAd;;AACA,UAAGD,KAAK,CAACpB,QAAT,EAAkB;AACdqB,QAAAA,OAAO,GAAGvB,KAAK,CAACwB,IAAN,OAAiB,EAAjB,IAAuBD,OAAjC;AACH;;AAED,UAAGD,KAAK,CAACf,SAAT,EAAmB;AACfgB,QAAAA,OAAO,GAAGvB,KAAK,CAACyB,MAAN,IAAgBH,KAAK,CAACf,SAAtB,IAAmCgB,OAA7C;AACH;;AAED,UAAGD,KAAK,CAACI,SAAT,EAAmB;AACfH,QAAAA,OAAO,GAAGvB,KAAK,CAACyB,MAAN,IAAgBH,KAAK,CAACI,SAAtB,IAAmCH,OAA7C;AACH;;AAED,UAAGD,KAAK,CAACnB,OAAT,EAAiB;AACb,YAAMwB,OAAO,GAAG,4DAAhB;AACAJ,QAAAA,OAAO,GAAGI,OAAO,CAACC,IAAR,CAAa5B,KAAb,KAAuBuB,OAAjC;AACH;;AAGD,aAAOA,OAAP;AACH;;;6BA0BO;AAAA;;AACJ,UAAMM,iBAAiB,GAAG,EAA1B;;AACA,WAAI,IAAIC,GAAR,IAAe,KAAKrC,KAAL,CAAWC,QAA1B,EAAmC;AAC/BmC,QAAAA,iBAAiB,CAACE,IAAlB,CAAuB;AACnBC,UAAAA,EAAE,EAACF,GADgB;AAEnBG,UAAAA,MAAM,EAAC,KAAKxC,KAAL,CAAWC,QAAX,CAAoBoC,GAApB;AAFY,SAAvB;AAKH;;AAED,UAAMI,IAAI,GAAGL,iBAAiB,CAACM,GAAlB,CAAsB,UAAAC,WAAW;AAAA,4BAC1C,oBAAC,KAAD;AACI,UAAA,GAAG,EAAEA,WAAW,CAACJ,EADrB;AAEI,UAAA,WAAW,EAAEI,WAAW,CAACH,MAAZ,CAAmBrC,WAFpC;AAGI,UAAA,aAAa,EAAEwC,WAAW,CAACH,MAAZ,CAAmBpC,aAHtC;AAII,UAAA,KAAK,EAAEuC,WAAW,CAACH,MAAZ,CAAmBjC,KAJ9B;AAKI,UAAA,OAAO,EAAG,CAACoC,WAAW,CAACH,MAAZ,CAAmB7B,KALlC;AAMI,UAAA,cAAc,EAAEgC,WAAW,CAACH,MAAZ,CAAmBhC,UANvC;AAOI,UAAA,OAAO,EAAImC,WAAW,CAACH,MAAZ,CAAmB5B,OAPlC;AAQI,UAAA,OAAO,EAAE,iBAACK,KAAD;AAAA,mBAAS,MAAI,CAACD,mBAAL,CAAyBC,KAAzB,EAA+B0B,WAAW,CAACJ,EAA3C,CAAT;AAAA,WARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD0C;AAAA,OAAjC,CAAb;AAaA,0BACI;AAAK,QAAA,SAAS,EAAE1C,OAAO,CAACE,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,QAAQ,EAAE,KAAKwB,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKkB,IADL,eAEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,CADJ,eAKI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BALJ,CADJ;AASH;;;;EAnHchD,S;;AAsHnB,IAAMmD,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACnC,SAAO;AACHnB,IAAAA,MAAM,EAAE,gBAACxB,KAAD,EAAOW,QAAP;AAAA,aAAoBgC,QAAQ,CAAC/C,OAAO,CAACgD,IAAR,CAAa5C,KAAb,EAAmBW,QAAnB,CAAD,CAA5B;AAAA;AADL,GAAP;AAGH,CAJD;;AAMA,eAAenB,OAAO,CAAC,IAAD,EAAMkD,kBAAN,CAAP,CAAiC7C,IAAjC,CAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\n\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport * as actions from '../../store/actions/index'\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        controls: {\r\n            email:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'email',\r\n                    placeholder:'Mail address'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required: true,\r\n                    isEmail:true\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            },\r\n            password:{\r\n                elementType:'input',\r\n                elementConfig:{\r\n                    type:'password',\r\n                    placeholder:'Password'\r\n                },\r\n                value:'',\r\n                validation:{\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid:false,\r\n                touched:false\r\n            }\r\n        },\r\n        isSignUp:true\r\n    }\r\n\r\n    chechValidity(value,rules){\r\n        let isValid = true;\r\n        if(rules.required){\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if(rules.minLength){\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if(rules.maxLength){\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if(rules.isEmail){\r\n            const pattern = /^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$/;\r\n            isValid = pattern.test(value) && isValid\r\n        }\r\n        \r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event,controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value:event.target.value,\r\n                valid:this.chechValidity(event.target.value,this.state.controls[controlName].validation),\r\n                touched:true\r\n            }\r\n        }\r\n        this.setState({controls:updatedControls})\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value,this.state.controls.password.value)\r\n    }\r\n\r\n    switchAuthModeHandler = () =>{\r\n        this.setState(prevState=>{\r\n            return {isSignUp: !prevState.isSignUp}\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const formElementsArray = [];\r\n        for(let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id:key,\r\n                config:this.state.controls[key]\r\n            })\r\n\r\n        }\r\n\r\n        const form = formElementsArray.map(formElement => (\r\n            <Input\r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid ={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched = {formElement.config.touched}\r\n                changed={(event)=>this.inputChangedHandler(event,formElement.id)} \r\n                />\r\n        ))\r\n\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">SUBMIT</Button>\r\n                </form>\r\n                <Button btnType=\"Danger\" >SWICH TO SIGNIN</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email,password) => dispatch(actions.auth(email,password))\r\n    }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(Auth)"]},"metadata":{},"sourceType":"module"}