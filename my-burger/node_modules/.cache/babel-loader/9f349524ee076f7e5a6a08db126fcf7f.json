{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\src\\\\containers\\\\BurgerBulider\\\\BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport * as burgerBuilderActions from '../../store/actions/index';\nimport axios from '../../axios-orders';\nimport Aux from \"../../hoc/Auxy\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'; // const INGREDIENT_PRICES = {\n//   salad: 0.5,\n//   cheese: 0.4,\n//   meat: 1.3,\n//   bacon: 0.7\n// };\n\nvar BurgerBuilder = /*#__PURE__*/function (_Component) {\n  _inherits(BurgerBuilder, _Component);\n\n  var _super = _createSuper(BurgerBuilder);\n\n  function BurgerBuilder() {\n    var _this;\n\n    _classCallCheck(this, BurgerBuilder);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      purchasing: false\n    };\n\n    _this.purchaseHandler = function () {\n      _this.setState({\n        purchasing: true\n      });\n    };\n\n    _this.purchaseCancelHandler = function () {\n      _this.setState({\n        purchasing: false\n      });\n    };\n\n    _this.purchaseContinueHandler = function () {\n      // const queryParams = [];\n      // for(let i in this.state.ingredients){\n      //   queryParams.push(encodeURIComponent(i) + '='+ encodeURIComponent(this.state.ingredients[i]))\n      // }\n      // queryParams.push('price='+this.props.totPrc)\n      // const queryString = queryParams.join('&')\n      _this.props.history.push('checkout');\n    };\n\n    return _this;\n  }\n\n  _createClass(BurgerBuilder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.onInitIngredients();\n    }\n  }, {\n    key: \"updatePurchaseState\",\n    value: function updatePurchaseState(ingredients) {\n      var sum = Object.keys(ingredients).map(function (igKey) {\n        return ingredients[igKey];\n      }).reduce(function (sum, el) {\n        return sum + el;\n      }, 0);\n      return sum > 0;\n    } // addIngredientHandler = (type) => {\n    //   const oldCount = this.state.ingredients[type];\n    //   const updatedCount = oldCount + 1;\n    //   const updatedIngredients = {\n    //     ...this.state.ingredients\n    //   };\n    //   updatedIngredients[type] = updatedCount;\n    //   const priceAddition = INGREDIENT_PRICES[type];\n    //   const oldPrice = this.state.totalPrice;\n    //   const newPrice = oldPrice + priceAddition;\n    //   this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    //   this.updatePurchaseState(updatedIngredients);\n    // };\n    // removeIngredientHandler = (type) => {\n    //   const oldCount = this.state.ingredients[type];\n    //   if (oldCount <= 0) {\n    //     return;\n    //   }\n    //   const updatedCount = oldCount - 1;\n    //   const updatedIngredients = {\n    //     ...this.state.ingredients\n    //   };\n    //   updatedIngredients[type] = updatedCount;\n    //   const priceDeduction = INGREDIENT_PRICES[type];\n    //   const oldPrice = this.state.totalPrice;\n    //   const newPrice = oldPrice - priceDeduction;\n    //   this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    //   this.updatePurchaseState(updatedIngredients);\n    // };\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var disabledInfo = _objectSpread({}, this.props.ingr);\n\n      for (var key in disabledInfo) {\n        disabledInfo[key] = disabledInfo[key] <= 0;\n      }\n\n      var orderSummary = null;\n      var burger = this.props.error ? /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 32\n        }\n      }, \"Data can't be loaded\") : /*#__PURE__*/React.createElement(Spinner, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 61\n        }\n      });\n\n      if (this.props.ingr) {\n        orderSummary = /*#__PURE__*/React.createElement(OrderSummary, {\n          ingredients: this.props.ingr,\n          purchaseCanceled: this.purchaseCancelHandler,\n          purchaseContinue: this.purchaseContinueHandler,\n          price: this.props.totPrc,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 20\n          }\n        });\n        burger = /*#__PURE__*/React.createElement(Aux, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(Burger, {\n          ingredients: this.props.ingr,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 7\n          }\n        }), /*#__PURE__*/React.createElement(BuildControls, {\n          ingredientAdded: this.props.onIngredientAdded,\n          ingredientRemoved: this.props.onIngredientRemoved,\n          disabled: disabledInfo,\n          purchasable: this.updatePurchaseState(this.props.ingr),\n          ordered: this.purchaseHandler,\n          price: this.props.totPrc,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 9\n          }\n        }));\n      }\n\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }\n      }, orderSummary), burger);\n    }\n  }]);\n\n  return BurgerBuilder;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    ingr: state.burgerBuilder.ingredients,\n    totPrc: state.burgerBuilder.totalPrice,\n    error: state.burgerBuilder.error\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onIngredientAdded: function onIngredientAdded(ingName) {\n      return dispatch(burgerBuilderActions.addIngredient(ingName));\n    },\n    onIngredientRemoved: function onIngredientRemoved(ingName) {\n      return dispatch(burgerBuilderActions.removeIngredient(ingName));\n    },\n    onInitIngredients: function onInitIngredients() {\n      return dispatch(burgerBuilderActions.initIngredients());\n    },\n    onPurchaseInit: function onPurchaseInit() {\n      return dispatch(burgerBuilderActions.purchaseInit);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","map":{"version":3,"sources":["C:/Users/user/Desktop/New folder/React-activities/my-burger/src/containers/BurgerBulider/BurgerBuilder.js"],"names":["React","Component","connect","burgerBuilderActions","axios","Aux","Burger","BuildControls","Modal","OrderSummary","Spinner","withErrorHandler","BurgerBuilder","state","purchasing","purchaseHandler","setState","purchaseCancelHandler","purchaseContinueHandler","props","history","push","onInitIngredients","ingredients","sum","Object","keys","map","igKey","reduce","el","disabledInfo","ingr","key","orderSummary","burger","error","totPrc","onIngredientAdded","onIngredientRemoved","updatePurchaseState","mapStateToProps","burgerBuilder","totalPrice","mapDispatchToProps","dispatch","ingName","addIngredient","removeIngredient","initIngredients","onPurchaseInit","purchaseInit"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport * as burgerBuilderActions from '../../store/actions/index'\r\nimport axios from '../../axios-orders'\r\n\r\nimport Aux from \"../../hoc/Auxy\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n// const INGREDIENT_PRICES = {\r\n//   salad: 0.5,\r\n//   cheese: 0.4,\r\n//   meat: 1.3,\r\n//   bacon: 0.7\r\n// };\r\n\r\nclass BurgerBuilder extends Component {\r\n  state = {\r\n    purchasing: false,\r\n  };\r\n\r\n  componentDidMount(){\r\n    this.props.onInitIngredients()\r\n  }\r\n\r\n  updatePurchaseState(ingredients) {\r\n       const sum = Object.keys(ingredients)\r\n        .map((igKey) => {\r\n          return ingredients[igKey];\r\n        })\r\n        .reduce((sum, el) => {\r\n          return sum + el;\r\n        }, 0);\r\n    return sum > 0 ;\r\n  }\r\n\r\n  // addIngredientHandler = (type) => {\r\n  //   const oldCount = this.state.ingredients[type];\r\n  //   const updatedCount = oldCount + 1;\r\n  //   const updatedIngredients = {\r\n  //     ...this.state.ingredients\r\n  //   };\r\n  //   updatedIngredients[type] = updatedCount;\r\n  //   const priceAddition = INGREDIENT_PRICES[type];\r\n  //   const oldPrice = this.state.totalPrice;\r\n  //   const newPrice = oldPrice + priceAddition;\r\n  //   this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n  //   this.updatePurchaseState(updatedIngredients);\r\n  // };\r\n\r\n  // removeIngredientHandler = (type) => {\r\n  //   const oldCount = this.state.ingredients[type];\r\n  //   if (oldCount <= 0) {\r\n  //     return;\r\n  //   }\r\n  //   const updatedCount = oldCount - 1;\r\n  //   const updatedIngredients = {\r\n  //     ...this.state.ingredients\r\n  //   };\r\n  //   updatedIngredients[type] = updatedCount;\r\n  //   const priceDeduction = INGREDIENT_PRICES[type];\r\n  //   const oldPrice = this.state.totalPrice;\r\n  //   const newPrice = oldPrice - priceDeduction;\r\n  //   this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\r\n  //   this.updatePurchaseState(updatedIngredients);\r\n  // };\r\n\r\n  purchaseHandler = () => {\r\n    this.setState({ purchasing: true });\r\n  };\r\n  purchaseCancelHandler = () => {\r\n    this.setState({ purchasing: false });\r\n  };\r\n  purchaseContinueHandler = () => {\r\n    // const queryParams = [];\r\n    // for(let i in this.state.ingredients){\r\n    //   queryParams.push(encodeURIComponent(i) + '='+ encodeURIComponent(this.state.ingredients[i]))\r\n    // }\r\n    // queryParams.push('price='+this.props.totPrc)\r\n    // const queryString = queryParams.join('&')\r\n    this.props.history.push('checkout')\r\n  };\r\n\r\n  render() {\r\n    const disabledInfo = {\r\n      ...this.props.ingr\r\n    };\r\n    for (let key in disabledInfo) {\r\n      disabledInfo[key] = disabledInfo[key] <= 0;\r\n    }\r\n \r\n    let orderSummary = null\r\n    \r\n  let burger =this.props.error?<p>Data can't be loaded</p>: <Spinner />\r\n\r\n  if(this.props.ingr){\r\n    orderSummary = <OrderSummary\r\n    ingredients={this.props.ingr}\r\n    purchaseCanceled={this.purchaseCancelHandler}\r\n    purchaseContinue={this.purchaseContinueHandler}\r\n    price={this.props.totPrc}\r\n  />\r\n\r\n   burger =  (<Aux>\r\n      <Burger ingredients={this.props.ingr} />\r\n        <BuildControls\r\n          ingredientAdded={this.props.onIngredientAdded}\r\n          ingredientRemoved={this.props.onIngredientRemoved}\r\n          disabled={disabledInfo}\r\n          purchasable={this.updatePurchaseState(this.props.ingr)}\r\n          ordered={this.purchaseHandler}\r\n          price={this.props.totPrc}\r\n        />\r\n    </Aux>)\r\n  }\r\n\r\n\r\n\r\n    return (\r\n      <Aux>\r\n        <Modal\r\n          show={this.state.purchasing}\r\n          modalClosed={this.purchaseCancelHandler}\r\n        >\r\n          {orderSummary}\r\n        </Modal>\r\n        {burger}\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps= state => {\r\n  return {\r\n    ingr:state.burgerBuilder.ingredients,\r\n    totPrc:state.burgerBuilder.totalPrice,\r\n    error:state.burgerBuilder.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onIngredientAdded : (ingName) => dispatch(burgerBuilderActions.addIngredient(ingName)),\r\n    onIngredientRemoved : (ingName) => dispatch(burgerBuilderActions.removeIngredient(ingName)),\r\n    onInitIngredients : () => dispatch(burgerBuilderActions.initIngredients()),\r\n    onPurchaseInit : () => dispatch(burgerBuilderActions.purchaseInit)\r\n  }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n"]},"metadata":{},"sourceType":"module"}