{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\user\\\\Desktop\\\\New folder\\\\React-activities\\\\my-burger\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\nexport var purchaseBurgerSuccess = function purchaseBurgerSuccess(id, orderData) {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderId: id,\n    orderData: orderData\n  };\n};\nexport var purchaseBurgerFail = function purchaseBurgerFail(error) {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error\n  };\n};\nexport var purchaseBurgerStart = function purchaseBurgerStart() {\n  return {\n    type: actionTypes.PURCHASE_BURGER_START\n  };\n};\nexport var purchaseBurger = function purchaseBurger(orderData, token) {\n  return function (dispatch) {\n    dispatch(purchaseBurgerStart());\n    axios.post('/orders.json?auth=' + token, orderData).then(function (resp) {\n      dispatch(purchaseBurgerSuccess(resp.data.name, orderData));\n    }).catch(function (error) {\n      dispatch(purchaseBurgerFail(error));\n    });\n  };\n};\nexport var purchaseInit = function purchaseInit() {\n  return {\n    type: actionTypes.PURCHASE_INIT\n  };\n};\nexport var fetchOrderSuccess = function fetchOrderSuccess(order) {\n  return {\n    type: actionTypes.FETCH_ORDER_SUCCESS,\n    order: order\n  };\n};\nexport var fetchOrderFail = function fetchOrderFail(error) {\n  return {\n    type: actionTypes.FETCH_ORDER_FAIL,\n    error: error\n  };\n};\nexport var fetchOrderStart = function fetchOrderStart() {\n  return {\n    type: actionTypes.FETCH_ORDER_START\n  };\n};\nexport var fetchOrder = function fetchOrder(token, userId) {\n  return function (dispatch) {\n    dispatch(fetchOrderStart());\n    var queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo\"' + userId + '\"';\n    axios.get('/orders.json' + queryParams).then(function (res) {\n      var fetchedData = [];\n\n      for (var key in res.data) {\n        fetchedData.push(_objectSpread(_objectSpread({}, res.data[key]), {}, {\n          id: key\n        }));\n      }\n\n      dispatch(fetchOrderSuccess(fetchedData));\n    }).catch(function (err) {\n      dispatch(fetchOrderFail());\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/New folder/React-activities/my-burger/src/store/actions/order.js"],"names":["actionTypes","axios","purchaseBurgerSuccess","id","orderData","type","PURCHASE_BURGER_SUCCESS","orderId","purchaseBurgerFail","error","PURCHASE_BURGER_FAIL","purchaseBurgerStart","PURCHASE_BURGER_START","purchaseBurger","token","dispatch","post","then","resp","data","name","catch","purchaseInit","PURCHASE_INIT","fetchOrderSuccess","order","FETCH_ORDER_SUCCESS","fetchOrderFail","FETCH_ORDER_FAIL","fetchOrderStart","FETCH_ORDER_START","fetchOrder","userId","queryParams","get","res","fetchedData","key","push","err"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders'\r\n\r\nexport const purchaseBurgerSuccess = (id,orderData) => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId:id,\r\n        orderData:orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type:actionTypes.PURCHASE_BURGER_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData,token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token,orderData)\r\n        .then(resp=>{\r\n            dispatch(purchaseBurgerSuccess(resp.data.name,orderData))\r\n           \r\n        })\r\n        .catch(error=>{\r\n            dispatch(purchaseBurgerFail(error))\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type:actionTypes.PURCHASE_INIT\r\n    }\r\n}\r\n\r\n\r\nexport const fetchOrderSuccess = (order) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_SUCCESS,\r\n        order:order\r\n    }\r\n}\r\n\r\nexport const fetchOrderFail = (error) => {\r\n    return {\r\n        type:actionTypes.FETCH_ORDER_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const fetchOrderStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDER_START\r\n    }\r\n}\r\n\r\nexport const fetchOrder = (token,userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrderStart())\r\n        const queryParams = '?auth=' + token +'&orderBy=\"userId\"&equalTo\"'+userId + '\"'\r\n        axios.get('/orders.json'+queryParams)\r\n        .then(res=>{\r\n            const fetchedData = [];\r\n            for(let key in res.data){\r\n                fetchedData.push({\r\n                    ...res.data[key],\r\n                    id:key\r\n                })\r\n            }\r\n            dispatch(fetchOrderSuccess(fetchedData))\r\n        })\r\n        .catch(err=>{\r\n            dispatch(fetchOrderFail())\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}