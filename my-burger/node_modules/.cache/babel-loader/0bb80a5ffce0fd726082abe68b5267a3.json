{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from 'axios';\nexport var authStart = function authStart() {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport var authSuccess = function authSuccess(token, userId) {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport var authFail = function authFail(error) {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport var logout = function logout() {\n  localStorage.removeItem(\"token\");\n  localStorage.removeItem(\"expirationDate\");\n  localStorage.removeItem(\"userId\");\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport var checkAuthTimeout = function checkAuthTimeout(expirationTime) {\n  return function (dispatch) {\n    setTimeout(function () {\n      dispatch(logout());\n    }, expirationTime * 1000);\n  };\n};\nexport var auth = function auth(email, password, isSignUp) {\n  return function (dispatch) {\n    dispatch(authStart());\n    var authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    var url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB4JzDs9KnhzyHX2e0vzuk9aZujYwsmCiw\";\n\n    if (!isSignUp) {\n      url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB4JzDs9KnhzyHX2e0vzuk9aZujYwsmCiw\";\n    }\n\n    axios.post(url, authData).then(function (resp) {\n      console.log(resp);\n      var expirationDate = new Date(new Date().getTime() + resp.data.expiresIn * 1000);\n      localStorage.setItem(\"token\", resp.data.idToken);\n      localStorage.setItem(\"expirationDate\", expirationDate);\n      localStorage.setItem(\"userId\", resp.data.localId);\n      dispatch(authSuccess(resp.data.idToken, resp.data.localId));\n      dispatch(checkAuthTimeout(resp.data.expiresIn));\n    }).catch(function (err) {\n      console.log(err);\n      dispatch(authFail(err.response.data.error));\n    });\n  };\n};\nexport var setAuthRedirectPath = function setAuthRedirectPath(path) {\n  return {\n    type: actionTypes.SET_AUTH_REDIRECT_PATH,\n    path: path\n  };\n};\nexport var checkAuthStatus = function checkAuthStatus() {\n  return function (dispatch) {\n    var token = localStorage.getItem(\"token\");\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      var expirationDate = new Date(localStorage.getItem(\"expirationDate\"));\n\n      if (expirationDate <= new Date()) {\n        dispatch(logout());\n      } else {\n        var userId = localStorage.getItem(\"userId\");\n        dispatch(authSuccess(localStorage.getItem(\"token\"), userId));\n        dispatch(checkAuthTimeout(expirationDate.getTime() - new Date().getTime()));\n      }\n    }\n  };\n};","map":{"version":3,"sources":["C:/Users/user/Desktop/New folder/React-activities/my-burger/src/store/actions/auth.js"],"names":["actionTypes","axios","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","checkAuthTimeout","expirationTime","dispatch","setTimeout","auth","email","password","isSignUp","authData","returnSecureToken","url","post","then","resp","console","log","expirationDate","Date","getTime","data","expiresIn","setItem","localId","catch","err","response","setAuthRedirectPath","path","SET_AUTH_REDIRECT_PATH","checkAuthStatus","getItem"],"mappings":"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","sourcesContent":["import * as actionTypes from './actionTypes';\r\nimport axios from 'axios'\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type:actionTypes.AUTH_START\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token,userId) => {\r\n    return {\r\n        type:actionTypes.AUTH_SUCCESS,\r\n        idToken:token,\r\n        userId:userId\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type:actionTypes.AUTH_FAIL,\r\n        error:error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"expirationDate\")\r\n    localStorage.removeItem(\"userId\")\r\n    return {\r\n        type:actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, expirationTime *1000);\r\n    }\r\n}\r\n\r\nexport const auth = (email,password,isSignUp) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email:email,\r\n            password:password,\r\n            returnSecureToken: true\r\n        }\r\n        let url = \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyB4JzDs9KnhzyHX2e0vzuk9aZujYwsmCiw\"\r\n        if(!isSignUp){\r\n            url = \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyB4JzDs9KnhzyHX2e0vzuk9aZujYwsmCiw\"\r\n        }\r\n        axios.post(url,authData)\r\n            .then(resp=>{\r\n                console.log(resp)\r\n                const expirationDate = new Date(new Date().getTime() + resp.data.expiresIn * 1000)\r\n                localStorage.setItem(\"token\",resp.data.idToken)\r\n                localStorage.setItem(\"expirationDate\",expirationDate)\r\n                localStorage.setItem(\"userId\",resp.data.localId)\r\n                dispatch(authSuccess(resp.data.idToken,resp.data.localId))\r\n                dispatch(checkAuthTimeout(resp.data.expiresIn))\r\n            })\r\n            .catch(err=>{\r\n                console.log(err)\r\n                dispatch(authFail(err.response.data.error))\r\n            })\r\n    }\r\n}\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type:actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path:path\r\n    }\r\n}\r\n\r\nexport const checkAuthStatus = () => {\r\n    return dispatch => {\r\n        const token =localStorage.getItem(\"token\")\r\n        \r\n        if(!token){\r\n            dispatch(logout())\r\n        }else{\r\n            const expirationDate = new Date(localStorage.getItem(\"expirationDate\"))\r\n            if(expirationDate <= new Date()){\r\n                dispatch(logout())\r\n            }else{\r\n                const userId = localStorage.getItem(\"userId\")\r\n            dispatch(authSuccess(localStorage.getItem(\"token\"),userId))\r\n            dispatch(checkAuthTimeout(expirationDate.getTime() - new Date().getTime()))\r\n            }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}